{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\Mekki Abu-Obeida\\\\Desktop\\\\projects\\\\Book-Search-Engine\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\Mekki Abu-Obeida\\\\Desktop\\\\projects\\\\Book-Search-Engine\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Users\\\\Mekki Abu-Obeida\\\\Desktop\\\\projects\\\\Book-Search-Engine\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Jumbotron,Container,CardColumns,Card,Button}from'react-bootstrap';import{useMutation,useQuery}from'@apollo/client';// import { getMe, deleteBook } from '../utils/API';\nimport Auth from'../utils/auth';import{removeBookId}from'../utils/localStorage';import{QUERY_ME}from'../utils/queries';import{DELETE_BOOK}from'../utils/mutations';var SavedBooks=function SavedBooks(){// const [userData, setUserData] = useState({});\nvar _useQuery=useQuery(QUERY_ME),loading=_useQuery.loading,error=_useQuery.error,data=_useQuery.data,refetch=_useQuery.refetch;var _useMutation=useMutation(DELETE_BOOK),_useMutation2=_slicedToArray(_useMutation,1),deleteBook=_useMutation2[0];useEffect(function(){refetch();},[refetch,data]);var userData=data===null||data===void 0?void 0:data.me;// create function that accepts the book's mongo _id value as param and deletes the book from the database\nvar handleDeleteBook=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(bookId){var token;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:token=Auth.loggedIn()?Auth.getToken():null;if(token){_context.next=3;break;}return _context.abrupt(\"return\",false);case 3:_context.prev=3;_context.next=6;return deleteBook({variables:{bookId:bookId}});case 6:// upon success, remove book's id from localStorage\nremoveBookId(bookId);refetch();_context.next=13;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](3);console.error(_context.t0);case 13:case\"end\":return _context.stop();}}},_callee,null,[[3,10]]);}));return function handleDeleteBook(_x){return _ref.apply(this,arguments);};}();// if data isn't here yet, say so\nif(loading){return/*#__PURE__*/React.createElement(\"h2\",null,\"LOADING...\");}if(error){console.log(error);}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Jumbotron,{fluid:true,className:\"text-light bg-dark\"},/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(\"h1\",null,\"Viewing saved books!\"))),/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(\"h2\",null,userData.savedBooks.length?\"Viewing \".concat(userData.savedBooks.length,\" saved \").concat(userData.savedBooks.length===1?'book':'books',\":\"):'You have no saved books!'),/*#__PURE__*/React.createElement(CardColumns,null,userData.savedBooks.map(function(book){return/*#__PURE__*/React.createElement(Card,{key:book.bookId,border:\"dark\"},book.image?/*#__PURE__*/React.createElement(Card.Img,{src:book.image,alt:\"The cover for \".concat(book.title),variant:\"top\"}):null,/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Card.Title,null,book.title),/*#__PURE__*/React.createElement(\"p\",{className:\"small\"},\"Authors: \",book.authors),/*#__PURE__*/React.createElement(Card.Text,null,book.description),/*#__PURE__*/React.createElement(Button,{className:\"btn-block btn-danger\",onClick:function onClick(){return handleDeleteBook(book.bookId);}},\"Delete this Book!\")));}))));};export default SavedBooks;","map":{"version":3,"sources":["C:/Users/Mekki Abu-Obeida/Desktop/projects/Book-Search-Engine/client/src/pages/SavedBooks.js"],"names":["React","useState","useEffect","Jumbotron","Container","CardColumns","Card","Button","useMutation","useQuery","Auth","removeBookId","QUERY_ME","DELETE_BOOK","SavedBooks","loading","error","data","refetch","deleteBook","userData","me","handleDeleteBook","bookId","token","loggedIn","getToken","variables","console","log","savedBooks","length","map","book","image","title","authors","description"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Jumbotron, Container, CardColumns, Card, Button } from 'react-bootstrap';\nimport { useMutation, useQuery } from '@apollo/client';\n// import { getMe, deleteBook } from '../utils/API';\nimport Auth from '../utils/auth';\nimport { removeBookId } from '../utils/localStorage';\nimport { QUERY_ME } from '../utils/queries';\nimport { DELETE_BOOK } from '../utils/mutations';\n\nconst SavedBooks = () => {\n  // const [userData, setUserData] = useState({});\n  const { loading, error, data, refetch } = useQuery(QUERY_ME)\n  const [deleteBook] = useMutation(DELETE_BOOK)\n\n\n  useEffect(() => {\n    refetch()\n  }, [refetch, data]);\n\n  const userData = data?.me\n\n  // create function that accepts the book's mongo _id value as param and deletes the book from the database\n  const handleDeleteBook = async (bookId) => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      await deleteBook({ variables: { bookId } });\n\n      // upon success, remove book's id from localStorage\n      removeBookId(bookId);\n\n      refetch()\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // if data isn't here yet, say so\n  if (loading) {\n    return <h2>LOADING...</h2>;\n  }\n\n  if (error) {\n    console.log(error)\n  }\n\n  return (\n    <>\n      <Jumbotron fluid className='text-light bg-dark'>\n        <Container>\n          <h1>Viewing saved books!</h1>\n        </Container>\n      </Jumbotron>\n      <Container>\n        <h2>\n          {userData.savedBooks.length\n            ? `Viewing ${userData.savedBooks.length} saved ${userData.savedBooks.length === 1 ? 'book' : 'books'}:`\n            : 'You have no saved books!'}\n        </h2>\n        <CardColumns>\n          {userData.savedBooks.map((book) => {\n            return (\n              <Card key={book.bookId} border='dark'>\n                {book.image ? <Card.Img src={book.image} alt={`The cover for ${book.title}`} variant='top' /> : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className='small'>Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n                  <Button className='btn-block btn-danger' onClick={() => handleDeleteBook(book.bookId)}>\n                    Delete this Book!\n                  </Button>\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SavedBooks;\n"]},"metadata":{},"sourceType":"module"}