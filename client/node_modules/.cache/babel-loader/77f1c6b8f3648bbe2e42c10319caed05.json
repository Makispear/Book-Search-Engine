{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mekki Abu-Obeida\\\\Desktop\\\\projects\\\\Book-Search-Engine\\\\client\\\\src\\\\pages\\\\SavedBooks.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Jumbotron, Container, CardColumns, Card, Button } from 'react-bootstrap';\nimport { useMutation, useQuery } from '@apollo/client'; // import { getMe } from '../utils/API';\n\nimport Auth from '../utils/auth';\nimport { removeBookId } from '../utils/localStorage';\nimport { DELETE_BOOK } from '../utils/mutations';\nimport { QUERY_ME, QUERY_SINGLE_USER } from '../utils/queries';\n\nconst SavedBooks = () => {\n  const {\n    loading,\n    error,\n    data,\n    refetch\n  } = useQuery(QUERY_ME); // useEffect hook to refetch the user's saved book data every time the data changes\n\n  useEffect(() => {\n    refetch();\n  }, [refetch, data]); // Sets the userData variable to the data retrieved from the QUERY_ME query\n\n  const userData = data === null || data === void 0 ? void 0 : data.me;\n\n  if (error) {\n    console.log(error.message);\n  } // Applies the REMOVE_BOOK mutation to the function removeBook to be called\n\n\n  const [removeBook] = useMutation(DELETE_BOOK); // Function that accepts the book's mongo _id value as param and deletes the book from the database\n\n  const handleDeleteBook = async bookId => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      // Calls the removeBook function to use the REMOVE_BOOK mutation on the book with the corresponding bookId\n      await deleteBook({\n        variables: {\n          bookId\n        }\n      }); // Upon success, remove book's id from localStorage\n\n      removeBookId(bookId); // Forces a refetch of the QUERY_ME query so that the the updated userData and component is displayed without reloading of the page\n\n      refetch();\n    } catch (err) {\n      console.error(err);\n    }\n  }; // if data isn't here yet, say so\n\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 12\n      }\n    }, \"LOADING...\");\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Jumbotron, {\n    fluid: true,\n    className: \"text-light bg-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \"Viewing saved books!\"))), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, userData.savedBooks.length ? `Viewing ${userData.savedBooks.length} saved ${userData.savedBooks.length === 1 ? \"book\" : \"books\"}:` : \"You have no saved books!\"), /*#__PURE__*/React.createElement(CardColumns, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, userData.savedBooks.map(book => {\n    return /*#__PURE__*/React.createElement(Card, {\n      key: book.bookId,\n      border: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }, book.image ? /*#__PURE__*/React.createElement(Card.Img, {\n      src: book.image,\n      alt: `The cover for ${book.title}`,\n      variant: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 19\n      }\n    }) : null, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 19\n      }\n    }, book.title), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 19\n      }\n    }, \"Authors: \", book.authors), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 19\n      }\n    }, book.description), /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-block btn-danger\",\n      onClick: () => handleDeleteBook(book.bookId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 19\n      }\n    }, \"Delete this Book!\")));\n  }))));\n};\n\nexport default SavedBooks;","map":{"version":3,"sources":["C:/Users/Mekki Abu-Obeida/Desktop/projects/Book-Search-Engine/client/src/pages/SavedBooks.js"],"names":["React","useState","useEffect","Jumbotron","Container","CardColumns","Card","Button","useMutation","useQuery","Auth","removeBookId","DELETE_BOOK","QUERY_ME","QUERY_SINGLE_USER","SavedBooks","loading","error","data","refetch","userData","me","console","log","message","removeBook","handleDeleteBook","bookId","token","loggedIn","getToken","deleteBook","variables","err","savedBooks","length","map","book","image","title","authors","description"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Jumbotron, Container, CardColumns, Card, Button } from 'react-bootstrap';\nimport { useMutation, useQuery } from '@apollo/client';\n// import { getMe } from '../utils/API';\nimport Auth from '../utils/auth';\nimport { removeBookId } from '../utils/localStorage';\nimport { DELETE_BOOK } from '../utils/mutations';\nimport { QUERY_ME, QUERY_SINGLE_USER } from '../utils/queries';\n\nconst SavedBooks = () => {\n  const { loading, error, data, refetch } = useQuery(QUERY_ME);\n\n  // useEffect hook to refetch the user's saved book data every time the data changes\n  useEffect(() => {\n    refetch();\n  }, [refetch, data]);\n\n  // Sets the userData variable to the data retrieved from the QUERY_ME query\n  const userData = data?.me;\n\n  if (error) {\n    console.log(error.message);\n  }\n\n  // Applies the REMOVE_BOOK mutation to the function removeBook to be called\n  const [removeBook] = useMutation(DELETE_BOOK);\n\n  // Function that accepts the book's mongo _id value as param and deletes the book from the database\n  const handleDeleteBook = async (bookId) => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      // Calls the removeBook function to use the REMOVE_BOOK mutation on the book with the corresponding bookId\n      await deleteBook({ variables: { bookId } });\n\n      // Upon success, remove book's id from localStorage\n      removeBookId(bookId);\n\n      // Forces a refetch of the QUERY_ME query so that the the updated userData and component is displayed without reloading of the page\n      refetch();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // if data isn't here yet, say so\n  if (loading) {\n    return <h2>LOADING...</h2>;\n  }\n\n  return (\n    <>\n      <Jumbotron fluid className=\"text-light bg-dark\">\n        <Container>\n          <h1>Viewing saved books!</h1>\n        </Container>\n      </Jumbotron>\n      <Container>\n        <h2>\n          {userData.savedBooks.length\n            ? `Viewing ${userData.savedBooks.length} saved ${userData.savedBooks.length === 1 ? \"book\" : \"books\"\n            }:`\n            : \"You have no saved books!\"}\n        </h2>\n        <CardColumns>\n          {userData.savedBooks.map((book) => {\n            return (\n              <Card key={book.bookId} border=\"dark\">\n                {book.image ? (\n                  <Card.Img\n                    src={book.image}\n                    alt={`The cover for ${book.title}`}\n                    variant=\"top\"\n                  />\n                ) : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className=\"small\">Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n                  <Button\n                    className=\"btn-block btn-danger\"\n                    onClick={() => handleDeleteBook(book.bookId)}\n                  >\n                    Delete this Book!\n                  </Button>\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SavedBooks;\n"]},"metadata":{},"sourceType":"module"}